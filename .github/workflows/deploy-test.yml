name: Deploy to Kubernetes test env

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install envsubst
      run: sudo apt-get install -y gettext

    - name: Set up Kubernetes
      uses: azure/setup-kubectl@v2
      with:
        version: '1.29.2'

    - name: Set up Helm
      uses: azure/setup-helm@v1

    - name: Creating kubeconfig file
      run: echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

    - name: Deploy to Test Environment
      run: |
        helm upgrade --install berlin-release-test ./berlin-chart \
          --namespace test \
          --values ./values-test.yaml \

          -set frontend.env.name=${{ secrets.TEST_ENV }} \
          -set frontend.url=${{ secrets.TEST_URL }} \

          -set backend.envs.jwtSecret=${{ secrets.JWT_SECRET }} \
          -set backend.envs.jwtRefreshSecret=${{ secrets.JWT_REFRESH_SECRET }} \
          -set backend.envs.env=${{ secrets.TEST_ENV }} \
          -set backend.envs.dbName=${{ secrets.TEST_DATABASE_NAME }} \
          -set backend.envs.dbUserName=${{ secrets.TEST_DATABASE_USERNAME }} \
          -set backend.envs.dbPassword=${{ secrets.TEST_DATABASE_PASSWORD }} \

          -set postgresq.name=${{ secrets.TEST_DATABASE_NAME }} \
          -set postgresq.userName=${{ secrets.TEST_DATABASE_USERNAME }} \
          -set postgresq.password=${{ secrets.TEST_DATABASE_PASSWORD }} \
          --wait --timeout 15m0s
