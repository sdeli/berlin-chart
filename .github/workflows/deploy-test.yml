name: Deploy to Kubernetes test env

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up DigitalOcean kubectl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Deploy to Test Environment
      run: |
        echo 'Logging into to DigitalOcean Container Registry'
        echo "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" | docker login registry.digitalocean.com -u "${{ secrets.DIGITALOCEAN_USERNAME }}" --password-stdin
        
        echo 'Setting up Helm'
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        
        echo 'Create kubeconfig file'
        echo "${{ secrets.KUBECONFIG }}" > $HOME/config

        helm upgrade --install berlin-release-test ./ \
          --kubeconfig $HOME/config \
          --namespace test \
          --values ./values-test.yaml \
          
          --set frontend.envs.name=${{ secrets.TEST_ENV }} \
          --set frontend.url=${{ secrets.TEST_URL }} \

          --set backend.envs.jwtSecret=${{ secrets.JWT_SECRET }} \
          --set backend.envs.jwtRefreshSecret=${{ secrets.JWT_REFRESH_SECRET }} \
          --set backend.envs.env=${{ secrets.TEST_ENV }} \
          --set backend.envs.dbName=${{ secrets.TEST_DATABASE_NAME }} \
          --set backend.envs.dbUserName=${{ secrets.TEST_DATABASE_USERNAME }} \
          --set backend.envs.dbPassword=${{ secrets.TEST_DATABASE_PASSWORD }} \

          --set postgresq.name=${{ secrets.TEST_DATABASE_NAME }} \
          --set postgresq.userName=${{ secrets.TEST_DATABASE_USERNAME }} \
          --set postgresq.password=${{ secrets.TEST_DATABASE_PASSWORD }} \
          --atomic \
          --timeout 10m \
          --wait
          --debug --dry-run
